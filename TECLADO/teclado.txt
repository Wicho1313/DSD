library IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

ENTITY P9 IS

PORT(CLR,CLK: IN STD_LOGIC;
	 F: IN STD_LOGIC_VECTOR (3 DOWNTO 0);
	 C: INOUT STD_LOGIC_VECTOR (2 DOWNTO 0);
	 S: OUT STD_LOGIC_VECTOR (6 DOWNTO 0) );
END ENTITY;

ARCHITECTURE A_P9 OF P9 IS
	CONSTANT DIG0 : STD_LOGIC_VECTOR(6 DOWNTO 0):= "1111110";
	CONSTANT DIG1 : STD_LOGIC_VECTOR(6 DOWNTO 0):= "0110000";
	CONSTANT DIG2 : STD_LOGIC_VECTOR(6 DOWNTO 0):= "1101101";
	CONSTANT DIG3 : STD_LOGIC_VECTOR(6 DOWNTO 0):= "1111001";
	CONSTANT DIG4 : STD_LOGIC_VECTOR(6 DOWNTO 0):= "0110011";
	CONSTANT DIG5 : STD_LOGIC_VECTOR(6 DOWNTO 0):= "1011011";
	CONSTANT DIG6 : STD_LOGIC_VECTOR(6 DOWNTO 0):= "1011111";
	CONSTANT DIG7 : STD_LOGIC_VECTOR(6 DOWNTO 0):= "1110001";
	CONSTANT DIG8 : STD_LOGIC_VECTOR(6 DOWNTO 0):= "1111111";
	CONSTANT DIG9 : STD_LOGIC_VECTOR(6 DOWNTO 0):= "1111011";
	CONSTANT GATO : STD_LOGIC_VECTOR(6 DOWNTO 0):= "0011101";
	CONSTANT ASTE : STD_LOGIC_VECTOR(6 DOWNTO 0):= "0110111";
	CONSTANT NOTEC: STD_LOGIC_VECTOR(6 DOWNTO 0):= "0000001";
	SIGNAL	 TECLA: STD_LOGIC_VECTOR(6 DOWNTO 0);

BEGIN 
	CA: PROCESS (CLR,CLK)
	BEGIN
    	IF(CLR='1')THEN
			C<="110";
		ELSIF(CLK'EVENT AND CLK='1')THEN
			C<= TO_STDLOGICVECTOR(TO_BITVECTOR(C) ROR 1);
		END IF;
	END PROCESS CA;

	DECO: PROCESS(F,C)
	BEGIN

	CASE F&C IS
		WHEN "1110" & "011" => TECLA<=DIG1;
		WHEN "1110" & "101" => TECLA<=DIG2;
		WHEN "1110" & "110" => TECLA<=DIG3;
		WHEN "1101" & "011" => TECLA<=DIG4;
		WHEN "1101" & "101" => TECLA<=DIG5;
		WHEN "1101" & "110" => TECLA<=DIG6;
		WHEN "1011" & "011" => TECLA<=DIG7;
		WHEN "1010" & "101" => TECLA<=DIG8;
		WHEN "1010" & "110" => TECLA<=DIG9;
		WHEN "0111" & "011" => TECLA<=GATO;
		WHEN "0110" & "101" => TECLA<=DIG0;
		WHEN "0110" & "110" => TECLA<=ASTE;
		WHEN OTHERS => TECLA<=NOTEC;
	END CASE ;

   	END PROCESS DECO;

	REG: PROCESS(CLK,CLR,TECLA)
	BEGIN
		IF(CLR='1')THEN
			S<=NOTEC;
		ELSIF(CLK'EVENT AND CLK='1')THEN
			IF(F="1111")THEN
				S<=S;
			ELSE
				S<=TECLA;
			END IF;
		END IF;
	END PROCESS REG;
END A_P9;







