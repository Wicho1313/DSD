library ieee;
use ieee.std_logic_1164.all;
entity TEC is
	port(F: in std_logic_vector(3 downto 0);
		CLK,CLR: in std_logic;
		C: inout std_logic_vector(2 downto 0);
		DISPLAY: out std_logic_vector(6 downto 0)
	);
end entity;
architecture A_Tec of TEC is
	signal AUX: std_logic_vector(6 downto 0);
	constant TECLA0: std_logic_vector(6 downto 0):="0000001";
	constant TECLA1: std_logic_vector(6 downto 0):="1001111";
	constant TECLA2: std_logic_vector(6 downto 0):="0010010";
	constant TECLA3: std_logic_vector(6 downto 0):="0000110";
	constant TECLA4: std_logic_vector(6 downto 0):="1001100";
	constant TECLA5: std_logic_vector(6 downto 0):="0100100";
	constant TECLA6: std_logic_vector(6 downto 0):="0100000";
	constant TECLA7: std_logic_vector(6 downto 0):="0001111";
	constant TECLA8: std_logic_vector(6 downto 0):="0000000";
	constant TECLA9: std_logic_vector(6 downto 0):="0000100";
	constant TECLAG: std_logic_vector(6 downto 0):="1001000";
	constant TECLAA: std_logic_vector(6 downto 0):="0001000";
	constant NP: std_logic_vector(6 downto 0):="1111111";
	BEGIN
		CONT:PROCESS(CLK,CLR)
			BEGIN
			IF (CLR='0') THEN
				C<="101";
			ELSIF(CLK'Event AND CLK='1') THEN
				C<=to_stdlogicvector(to_bitvector(C) ROR 1);
			END IF;
	    END PROCESS CONT;
		DECO:PROCESS(F,C)
			BEGIN
				CASE F&C IS
					WHEN "0111"&"011"=>AUX<=TECLAA;
					WHEN "0111"&"101"=>AUX<=TECLA0;
					WHEN "0111"&"110"=>AUX<=TECLAG;
					WHEN "1110"&"011"=>AUX<=TECLA1;
					WHEN "1110"&"101"=>AUX<=TECLA2;
					WHEN "1110"&"110"=>AUX<=TECLA3;
					WHEN "1101"&"011"=>AUX<=TECLA4;
					WHEN "1101"&"101"=>AUX<=TECLA5;
					WHEN "1101"&"110"=>AUX<=TECLA6;
					WHEN "1011"&"011"=>AUX<=TECLA7;
					WHEN "1011"&"101"=>AUX<=TECLA8;
					WHEN "1011"&"110"=>AUX<=TECLA9;
					WHEN others=>AUX<=NP;
				 END CASE;
		END PROCESS DECO;
		REG:PROCESS(CLK,CLR,AUX)
			BEGIN
				IF(CLR='0')THEN
					DISPLAY<=NP;
				ELSIF(CLK'Event AND CLK='1') THEN
					IF(F="1111")THEN
						DISPLAY<=DISPLAY;
					ELSE
						DISPLAY<=AUX;
					END IF;
				END IF;
		END PROCESS REG;
end A_Tec